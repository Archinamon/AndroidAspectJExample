buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://raw.github.com/Archinamon/GradleAspectJ-Android/master' }
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        //APT
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        //AspectJ
        classpath 'com.archinamon:android-gradle-aspectj:1.3.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'groovyx.grooid.groovy-android'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.archinamon.aspectj'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.archinamon.example"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

aspectj {
    binaryWeave true
    weaveTests false
    exclude "com.archinamon.xpoint"
    weaveInfo true
    addSerialVersionUID true
    ignoreErrors true
}

retrolambda {
    jdk getJavaVersion(8);
    oldJdk getJavaVersion(7);
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods false
}

androidGroovy {
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
}

apt {
    arguments {
        resourcePackageName android.defaultConfig.applicationId
        androidManifestFile variant.outputs[0].processResources.manifestFile
    }
}

def AAVersion = '3.3' as String
dependencies {
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"

    compile 'org.codehaus.groovy:groovy:2.4.5:grooid'

//    apt 'com.squareup.dagger:dagger-compiler:1.2.1'
//    compile 'com.squareup.dagger:dagger:1.2.1'
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'com.google.dagger:dagger:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'

    compile 'com.squareup.picasso:picasso:2.1.1'

    testCompile 'junit:junit:4.12'
}

def String getJavaVersion(Integer v) {
    def sout;
    def proc;

    switch (org.gradle.internal.os.OperatingSystem.current()) {
        case org.gradle.internal.os.OperatingSystem.MAC_OS:
            proc = "/usr/libexec/java_home -v 1.$v".execute();
            break;
        case org.gradle.internal.os.OperatingSystem.LINUX:
//            proc = "update-java-alternatives -l | awk '{ print \$3 }' | grep 1.$v".execute();
//            break;
        case org.gradle.internal.os.OperatingSystem.WINDOWS:
        default:
            def final localJavaEnvPath = "JAVA${v}_HOME";
            def final lTCenvJavaPath = ["7":System.getenv(isTCBuild() ? "JDK_17" : localJavaEnvPath),
                                        "8":System.getenv(isTCBuild() ? "JDK_18" : localJavaEnvPath)];

            return lTCenvJavaPath."$v";
    }

    if (proc) {
        sout = new StringBuffer();
        proc.consumeProcessOutput(sout, new StringBuffer());
        proc.waitForOrKill(1000);
        return sout.toString().replace("\n", "").replace("\r", "");
    }

    return "";
}

def isTCBuild() {
    return project.properties.containsKey('teamcity');
}
